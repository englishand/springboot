<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="BASE_DIR" value="/appdata/zhy/logs"/>
    <property name="APP" value="projectone"/>
    <property name="infoLevel" value="info"/>
    <property name="errorLevel" value="error"/>
    <property name="monitor" value="monitor"/>
    <contextName>${APP}</contextName>

    <!--    控制台输出-->
    <appender name="STDOUT_C" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
        </encoder>
    </appender>

    <!--info文件输出，包括error级别-->
    <!-- RollingFileAppender 用于切分文件日志：-->
    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
        如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
        的日志改名为今天的日期。即，<File> 的日志都是当天的。-->
        <File>${BASE_DIR}/${infoLevel}/info.log</File>
        <!--格式化输出-->
        <encoder>
            <pattern>%d|+|%contextName|+|%level|+|%c{1.}|+|%t|+|%m%n</pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <fileNamePattern>${BASE_DIR}/${infoLevel}/info.%d{yyyy-MM-dd}</fileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${BASE_DIR}/${errorLevel}/error.log</File>
        <!--ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中。-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--设置日志级别,过滤掉info日志,只输入error日志-->
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${BASE_DIR}/${errorLevel}/error.%d{yyyy-MM-dd}</fileNamePattern>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d|+|%contextName|+|%level|+|%c{1.}|+|%t|+|%m%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="MONITOR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${BASE_DIR}/${monitor}/monitor.log</File>
        <encoder>
            <pattern>%d|+|%m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${BASE_DIR}/${monitor}/monitor.%d{yyyy-MM-dd}</fileNamePattern>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <!--匹配到就允许-->
            <onMatch>ACCEPT</onMatch>
            <!--没有匹配到就禁止-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--用来设置某一个包或者具体的某一个类的日志打印级别、以及指定 <appender>
    addtivity :是否向上级loger传递打印信息。默认是true。-->
    <logger name="monitorLog" level="INFO" additivity="false">
        <appender-ref ref="MONITOR_LOG"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="STDOUT_C"/>
        <appender-ref ref="INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
    </root>


</configuration>